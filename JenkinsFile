pipeline {
    agent {
        docker {
            image 'python:3.8'
            args '--user 0:0'
        }
    }

    // Definir todos los parámetros requeridos
    parameters {
        string(name: 'SF_ACCOUNT', description: 'Snowflake account (e.g. xy12345.region.azure)')
        string(name: 'SF_USERNAME', description: 'Snowflake user')
        password(name: 'SNOWFLAKE_PASSWORD', description: 'Snowflake password')
        string(name: 'SF_ROLE', defaultValue: 'SYSADMIN', description: 'Snowflake role')
        string(name: 'SF_WAREHOUSE', defaultValue: 'COMPUTE_WH', description: 'Snowflake warehouse')
        string(name: 'SF_DATABASE', defaultValue: 'DEMO_DB', description: 'Snowflake database')
    }

    environment {
        // Estas se toman automáticamente desde los parámetros
        SF_ACCOUNT   = "${params.SF_ACCOUNT}"
        SF_USERNAME  = "${params.SF_USERNAME}"
        SF_ROLE      = "${params.SF_ROLE}"
        SF_WAREHOUSE = "${params.SF_WAREHOUSE}"
        SF_DATABASE  = "${params.SF_DATABASE}"
        SNOWFLAKE_PASSWORD = "${params.SNOWFLAKE_PASSWORD}"
    }

    stages {
        stage('Run schemachange') {
            steps {
                sh '''
                    pip install --upgrade schemachange

                    cat > connections.toml << EOF
[Connection_1]
account = "${SF_ACCOUNT}"
user = "${SF_USERNAME}"
password = "${SNOWFLAKE_PASSWORD}"
role = "${SF_ROLE}"
warehouse = "${SF_WAREHOUSE}"
database = "${SF_DATABASE}"
schema = "SCHEMACHANGE"
change_history_table = "${SF_DATABASE}.SCHEMACHANGE.CHANGE_HISTORY"
EOF

                    schemachange -f migrations --connection-name Connection_1 --connections-file-path connections.toml --create-change-history-table
                '''
            }
        }
    }
}
